// ==========================================================================
// Project:   SCUI Samples: Code Samples
// Copyright: 2009-2010 Evin Grano and Contributors
// ==========================================================================
/*globals Samples */

Samples.codeSamples = SC.Object.create({
  mobility: "  mobility: SC.View.design({\n    classNames: ['mixins-sample'],\n    layout: { top: 30, left: 0, right: 0, bottom: 0 },\n    childViews: 'example code'.w(),\n\n    example: SC.LabelView.design(SCUI.Mobility, {\n      layout: {top: 25, centerX: 0, width: 200, height: 30},\n      classNames: ['click'],\n      textAlign: SC.ALIGN_CENTER,\n      value: 'Click on Me And Drag Around'\n    }),\n\n    code: Samples.CodeView.design({\n      layout: {top: 175, left: 10, right: 10, bottom: 10},\n      codeBinding: SC.Binding.from('Samples.codeSamples.mobility').oneWay()\n    })\n  }),\n",
  resizable: "  resizable: SC.View.design({\n    childViews: 'code example1 example2 example3'.w(),\n\n    example1: SC.View.design({\n      layout: {top: 10, centerX: -210, width: 200, height: 125},\n      classNames: ['resize'],\n      childViews: 'label draghandle'.w(),\n\n      label: SC.LabelView.design({\n        layout: {top: 10, left: 10, bottom: 10, right: 10},\n        textAlign: SC.ALIGN_CENTER,\n        value: 'I\'m a View that you can resize both ways. Grab the Red handle and resize me'\n      }),\n\n      draghandle: SC.View.design(SCUI.Resizable, {\n        layout: {right: 0, bottom: 0, width: 10, height: 10},\n        classNames: ['handle']\n      })\n    }),\n\n    example2: SC.View.design({\n      layout: {top: 10, centerX: 0, width: 200, height: 125},\n      classNames: ['resize'],\n      childViews: 'label draghandle'.w(),\n\n      label: SC.LabelView.design({\n        layout: {top: 10, left: 10, bottom: 10, right: 10},\n        textAlign: SC.ALIGN_CENTER,\n        value: 'I\'m a View that you can resize horizontal. Grab the Red handle and resize me'\n      }),\n\n      draghandle: SC.View.design(SCUI.Resizable, {\n        layout: {right: 0, bottom: 0, width: 10, height: 10},\n        classNames: ['handle'],\n        verticalMove: NO\n      })\n    }),\n\n    example3: SC.View.design({\n      layout: {top: 10, centerX: 210, width: 200, height: 125},\n      classNames: ['resize'],\n      childViews: 'label draghandle'.w(),\n\n      label: SC.LabelView.design({\n        layout: {top: 10, left: 10, bottom: 10, right: 10},\n        textAlign: SC.ALIGN_CENTER,\n        value: 'I\'m a View that you can resize vertical. Grab the Red handle and resize me'\n      }),\n\n      draghandle: SC.View.design(SCUI.Resizable, {\n        layout: {right: 0, bottom: 0, width: 10, height: 10},\n        classNames: ['handle'],\n        horizontalMove: NO\n      })\n    }),\n\n    code: Samples.CodeView.design({\n      layout: {top: 175, left: 10, right: 10, bottom: 10},\n      codeBinding: SC.Binding.from('Samples.codeSamples.resizable').oneWay()\n    })\n  }),\n",
  simpleButton: "  simpleButton: SC.View.design({\n    classNames: ['mixins-sample'],\n    layout: { top: 30, left: 0, right: 0, bottom: 0 },\n    childViews: 'example code'.w(),\n\n    example: SC.LabelView.design(SCUI.SimpleButton, {\n      layout: {top: 25, centerX: 0, width: 200, height: 30},\n      classNames: ['click'],\n      textAlign: SC.ALIGN_CENTER,\n      value: 'Click on Me To Fire an Event',\n      target: Samples.mixinSourceController,\n      action: 'simpleButtonAction'\n    }),\n\n    code: Samples.CodeView.design({\n      layout: {top: 175, left: 10, right: 10, bottom: 10},\n      codeBinding: SC.Binding.from('Samples.codeSamples.simpleButton').oneWay()\n    })\n  }),\n",
  dropDown1: "  dropDown1: SC.View.design({\n    classNames: ['mixins-sample'],\n    layout: { top: 30, left: 0, right: 0, bottom: 0 },\n    childViews: 'example code'.w(),\n\n    example: SC.LabelView.design(SCUI.SimpleButton, SCUI.DropDown, {\n      layout: {top: 25, centerX: 0, width: 200, height: 45},\n      classNames: ['click'],\n      textAlign: SC.ALIGN_CENTER,\n      value: 'Click on Me To Do a Normal Menu',\n      dropDown: SC.MenuPane.design({\n        /* blank view; sproutcore will take care of this automatically */\n        contentView: SC.View.design({}),\n        /* height gets set automatically */\n        layout: { width: 116, height: 0 },\n        itemTitleKey: 'title',\n        itemTargetKey: 'target',\n        itemActionKey: 'action',\n        itemSeparatorKey: 'isSeparator',\n        itemIsEnabledKey: 'isEnabled',\n        items: [\n          { title: \"Action 1\", target: Samples.mixinSourceController,\n            action: 'fireAction1', isEnabled: YES },\n          { title: \"Action 2\", target: Samples.mixinSourceController,\n            action: 'fireAction2', isEnabled: YES },\n          { isSeparator: YES },\n          { title: \"Action 3\", target: Samples.mixinSourceController,\n            action: 'fireAction3', isEnabled: YES }\n        ]\n      })\n    }),\n\n    code: Samples.CodeView.design({\n      layout: {top: 175, left: 10, right: 10, bottom: 10},\n      codeBinding: SC.Binding.from('Samples.codeSamples.dropDown1').oneWay()\n    })\n  }),\n",
  dropDown2: "  dropDown2: SC.View.design({\n    classNames: ['mixins-sample'],\n    layout: { top: 30, left: 0, right: 0, bottom: 0 },\n    childViews: 'example code'.w(),\n\n    example: SC.LabelView.design(SCUI.SimpleButton, SCUI.DropDown, {\n      layout: {top: 25, centerX: 0, width: 200, height: 45},\n      classNames: ['click'],\n      textAlign: SC.ALIGN_CENTER,\n      value: 'Click on Me To Do a Custom Menu',\n      dropDownType: SC.PICKER_POINTER,\n      dropDown: SC.PickerPane.design({\n        classNames: ['dockbutton-menu'],\n        layout: { top: 5, width: 298, height: 82 },\n        contentView: SC.View.design({\n          layout: { left: 7, top: 0, right: 7, bottom: 5 },\n          childViews: 'action1 action2 action3'.w(),\n\n          action1: SC.LabelView.design( SCUI.SimpleButton, {\n            layout: { left: 3, top: 10, width: 62, height: 47 },\n            value: \"Action #1\",\n            target: Samples.mixinSourceController,\n            action: 'fireAction1'\n          }),\n\n          action2: SC.LabelView.design( SCUI.SimpleButton, {\n            layout: { left: 75, top: 10, width: 62, height: 62 },\n            value: \"Action #2\",\n            target: Samples.mixinSourceController,\n            action: 'fireAction2'\n          }),\n\n          action3: SC.LabelView.design( SCUI.SimpleButton, {\n            layout: { left: 147, top: 10, width: 62, height: 47 },\n            value: \"Action #3\",\n            target: Samples.mixinSourceController,\n            action: 'fireAction3'\n          })\n        })\n      })\n    }),\n\n    code: Samples.CodeView.design({\n      layout: {top: 175, left: 10, right: 10, bottom: 10},\n      codeBinding: SC.Binding.from('Samples.codeSamples.dropDown2').oneWay()\n    })\n  }),\n",
  toolTip: "  toolTip: SC.View.design({\n    classNames: ['mixins-sample'],\n    layout: { top: 30, left: 0, right: 0, bottom: 0 },\n    childViews: 'example code'.w(),\n\n    example: SC.LabelView.design(SCUI.ToolTip, {\n      layout: {top: 25, centerX: 0, width: 200, height: 30},\n      classNames: ['click'],\n      textAlign: SC.ALIGN_CENTER,\n      value: 'Hover on Me To see a Tool Tip',\n      toolTip: 'Buy Low, Sell High, only drink Cappuccino'\n    }),\n\n    code: Samples.CodeView.design({\n      layout: {top: 175, left: 10, right: 10, bottom: 10},\n      codeBinding: SC.Binding.from('Samples.codeSamples.toolTip').oneWay()\n    })\n  })\n",
  context_menu: "Samples.contextMenuPage = SC.Page.design({\n\n  mainView: SC.View.design({\n    classNames: ['context-menu-sample'],\n    layout: { top: 30, left: 0, right: 0, bottom: 0 },\n    childViews: 'example code'.w(),\n\n    example: SC.LabelView.design({\n      layout: {top: 50, centerX: 0, width: 150, height: 30},\n      classNames: ['click'],\n      textAlign: SC.ALIGN_CENTER,\n      value: 'Right Click on Me',\n\n      mouseDown: function(evt){\n        var menuOptions = [\n          { title: 'Action #1',  target: Samples, action: 'fireAction1', isEnabled: YES },\n          { title: 'Action #2',  target: Samples, action: 'fireAction2', isEnabled: YES },\n          { isSeparator: YES },\n          { title: 'Action #3', target: Samples, action: '', isEnabled: NO },\n          { isSeparator: YES },\n          { title: 'Action #4', target: Samples, action: '', isEnabled: NO }\n        ];\n\n        var menu = SCUI.ContextMenuPane.create({\n          layout: { width: 200, height: 0 },\n          contentView: SC.View.design({}),\n          items: menuOptions\n        });\n\n        menu.popup(this, evt);\n        return YES;\n      }\n    }),\n\n    code: Samples.CodeView.design({\n      layout: {top: 200, left: 10, right: 10, height: 500},\n      codeBinding: SC.Binding.from('Samples.codeSamples.context_menu').oneWay()\n    })\n  })\n});\n",
  content_editable: "Samples.contentEditablePage = SC.Page.design({\n\n  mainView: SC.View.design({\n    childViews: 'bold italic underlined createLink contentEditable translucentCE resizableContentEdiable code'.w(),\n\n    bold: SC.ButtonView.design({\n      layout: { left: 40, top: 40, width: 90, height: 24 },\n      title: 'Bold',\n      buttonBehavior: SC.TOGGLE_BEHAVIOR,\n      toggleOnValue: YES,\n      toggleOffValue: NO,\n      valueBinding: 'Samples.contentEditableController*content.selectionIsBold'\n    }),\n\n    italic: SC.ButtonView.design({\n      layout: { left: 135, top: 40, width: 90, height: 24 },\n      title: 'Italic',\n      buttonBehavior: SC.TOGGLE_BEHAVIOR,\n      toggleOnValue: YES,\n      toggleOffValue: NO,\n      valueBinding: 'Samples.contentEditableController*content.selectionIsItalicized'\n    }),\n\n    underlined: SC.ButtonView.design({\n      layout: { left: 40, top: 69, width: 90, height: 24 },\n      title: 'Underline',\n      buttonBehavior: SC.TOGGLE_BEHAVIOR,\n      toggleOnValue: YES,\n      toggleOffValue: NO,\n      valueBinding: 'Samples.contentEditableController*content.selectionIsUnderlined'\n    }),\n\n    createLink: SC.ButtonView.design({\n      layout: { left: 135, top: 69, width: 90, height: 24 },\n      title: \"Create Link\",\n      target: Samples.contentEditableController,\n      action: 'createLink'\n    }),\n\n    contentEditable: SCUI.ContentEditableView.design({\n      layout: { left: 40, top: 98, width: 300, height: 125 },\n      value: 'Basic content editable view'\n    }),\n\n    translucentCE: SCUI.ContentEditableView.design({\n      layout: { left: 360, top: 98, width: 300, height: 125 },\n      value: 'A transparent content editable view',\n      isOpaque: YES,\n      allowScrolling: NO\n    }),\n\n    resizableContentEdiable: SCUI.ContentEditableView.design({\n      layout: { left: 680, top: 98, width: 300, height: 125 },\n      value: 'A content editable view that grows or shrinks depending on the size of the content',\n      hasFixedDimensions: NO,\n      allowScrolling: NO\n    }),\n\n    code: Samples.CodeView.design({\n      layout: {top: 245, left: 10, right: 10, bottom: 10},\n      codeBinding: SC.Binding.from('Samples.codeSamples.content_editable').oneWay()\n    })\n\n  }),\n\n  contentEditableOutlet: SC.outlet('mainView.childViews.4')\n\n});\n",
  combo_box: "Samples.comboBoxPage = SC.Page.design({\n\n  mainView: SC.View.design({\n    classNames: ['combobox-sample'],\n    layout: { top: 30, left: 0, right: 0, bottom: 0 },\n    childViews: 'label example code'.w(),\n\n    label: SC.LabelView.design({\n      layout: { top: 0 , centerX: 20, height: 35, width: 300 },\n      textAlign: SC.ALIGN_CENTER,\n      value: 'Start Typing in the Area to Search for US States'\n    }),\n\n    example: SCUI.ComboBoxView.design({\n      layout: { top: 40 , centerX: 20, height: 24, width: 150 },\n      objectsBinding: SC.Binding.oneWay('Samples.comboBoxController.content'),\n      selectedObjectBinding: 'Samples.comboBoxController.selection',\n      valueKey: 'value',\n      nameKey: 'name'\n    }),\n\n    code: Samples.CodeView.design({\n      layout: {top: 90, left: 10, right: 10, bottom: 10},\n      codeBinding: SC.Binding.from('Samples.codeSamples.combo_box').oneWay()\n    })\n  })\n});\n"
});
